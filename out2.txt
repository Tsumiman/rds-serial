Russian-Doll-Search
i = 4, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
4 
find_max done, mu[4] = 1
i = 3, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
3 
find_max done, mu[3] = 1
i = 2, c.size = 2, p.size = 1
debug: running find_max with c.size = 2, p.size = 1
before erasing 3:
3 4 
after:
4 
debug: running find_max with c.size = 0, p.size = 2
Updating new lb solution to:
2 3 
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 2
find_max done, mu[2] = 2
i = 1, c.size = 2, p.size = 1
debug: running find_max with c.size = 2, p.size = 1
before erasing 2:
2 3 
after:
3 
debug: running find_max with c.size = 1, p.size = 2
before erasing 3:
3 
after:

debug: running find_max with c.size = 0, p.size = 3
Updating new lb solution to:
1 2 3 
find_max done, mu[1] = 3
i = 0, c.size = 1, p.size = 1
debug: running find_max with c.size = 1, p.size = 1
find_max done, mu[0] = 3
RDS done
rds: time elapsed = 0.000032
-----------------------
RDS returned 3
i = 4, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
4 
find_max done, mu[4] = 1
i = 3, c.size = 1, p.size = 1
debug: running find_max with c.size = 1, p.size = 1
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 2
Updating new lb solution to:
3 4 
find_max done, mu[3] = 2
i = 2, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
find_max done, mu[2] = 2
i = 1, c.size = 1, p.size = 1
debug: running find_max with c.size = 1, p.size = 1
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 2
find_max done, mu[1] = 2
i = 0, c.size = 3, p.size = 1
debug: running find_max with c.size = 3, p.size = 1
before erasing 2:
2 3 4 
after:
3 4 
debug: running find_max with c.size = 0, p.size = 2
before erasing 3:
3 4 
after:
4 
debug: running find_max with c.size = 1, p.size = 2
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 3
Updating new lb solution to:
0 3 4 
find_max done, mu[0] = 3
RDS done
rds: time elapsed = 0.000012
-----------------------
RDS returned 3
i = 4, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
4 
find_max done, mu[4] = 1
i = 3, c.size = 1, p.size = 1
debug: running find_max with c.size = 1, p.size = 1
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 2
Updating new lb solution to:
3 4 
find_max done, mu[3] = 2
i = 2, c.size = 2, p.size = 1
debug: running find_max with c.size = 2, p.size = 1
before erasing 3:
3 4 
after:
4 
debug: running find_max with c.size = 0, p.size = 2
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 2
find_max done, mu[2] = 2
i = 1, c.size = 3, p.size = 1
debug: running find_max with c.size = 3, p.size = 1
before erasing 2:
2 3 4 
after:
3 4 
debug: running find_max with c.size = 1, p.size = 2
before erasing 3:
3 
after:

debug: running find_max with c.size = 0, p.size = 3
Updating new lb solution to:
1 2 3 
before erasing 3:
3 4 
after:
4 
debug: running find_max with c.size = 1, p.size = 2
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 3
find_max done, mu[1] = 3
i = 0, c.size = 4, p.size = 1
debug: running find_max with c.size = 4, p.size = 1
before erasing 1:
1 2 3 4 
after:
2 3 4 
debug: running find_max with c.size = 1, p.size = 2
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 3
before erasing 2:
2 3 4 
after:
3 4 
debug: running find_max with c.size = 2, p.size = 2
before erasing 3:
3 4 
after:
4 
debug: running find_max with c.size = 0, p.size = 3
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 3
before erasing 3:
3 4 
after:
4 
debug: running find_max with c.size = 1, p.size = 2
before erasing 4:
4 
after:

debug: running find_max with c.size = 0, p.size = 3
find_max done, mu[0] = 3
RDS done
rds: time elapsed = 0.000022
-----------------------
RDS returned 3

--------------

i = 5, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
5 
find_max done, mu[5] = 1
i = 4, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
4 
find_max done, mu[4] = 1
i = 3, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
3 
find_max done, mu[3] = 1
i = 2, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
2 
find_max done, mu[2] = 1
i = 1, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
1 
find_max done, mu[1] = 1
i = 0, c.size = 5, p.size = 1
debug: running find_max with c.size = 5, p.size = 1
before erasing 1:
1 2 3 4 5 
after:
2 3 4 5 
debug: running find_max with c.size = 0, p.size = 2
Updating new lb solution to:
0 1 
before erasing 2:
2 3 4 5 
after:
3 4 5 
debug: running find_max with c.size = 0, p.size = 2
before erasing 3:
3 4 5 
after:
4 5 
debug: running find_max with c.size = 0, p.size = 2
before erasing 4:
4 5 
after:
5 
debug: running find_max with c.size = 0, p.size = 2
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 2
find_max done, mu[0] = 2
RDS done
rds: time elapsed = 0.000015
-----------------------
RDS returned 2
i = 5, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
5 
find_max done, mu[5] = 1
i = 4, c.size = 1, p.size = 1
debug: running find_max with c.size = 1, p.size = 1
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 2
Updating new lb solution to:
4 5 
find_max done, mu[4] = 2
i = 3, c.size = 2, p.size = 1
debug: running find_max with c.size = 2, p.size = 1
before erasing 4:
4 5 
after:
5 
debug: running find_max with c.size = 1, p.size = 2
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 3
Updating new lb solution to:
3 4 5 
find_max done, mu[3] = 3
i = 2, c.size = 3, p.size = 1
debug: running find_max with c.size = 3, p.size = 1
before erasing 3:
3 4 5 
after:
4 5 
debug: running find_max with c.size = 2, p.size = 2
before erasing 4:
4 5 
after:
5 
debug: running find_max with c.size = 1, p.size = 3
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 4
Updating new lb solution to:
2 3 4 5 
find_max done, mu[2] = 4
i = 1, c.size = 4, p.size = 1
debug: running find_max with c.size = 4, p.size = 1
before erasing 2:
2 3 4 5 
after:
3 4 5 
debug: running find_max with c.size = 3, p.size = 2
before erasing 3:
3 4 5 
after:
4 5 
debug: running find_max with c.size = 2, p.size = 3
before erasing 4:
4 5 
after:
5 
debug: running find_max with c.size = 1, p.size = 4
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 5
Updating new lb solution to:
1 2 3 4 5 
find_max done, mu[1] = 5
i = 0, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
find_max done, mu[0] = 5
RDS done
rds: time elapsed = 0.000022
-----------------------
RDS returned 5
i = 5, c.size = 0, p.size = 1
debug: running find_max with c.size = 0, p.size = 1
Updating new lb solution to:
5 
find_max done, mu[5] = 1
i = 4, c.size = 1, p.size = 1
debug: running find_max with c.size = 1, p.size = 1
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 2
Updating new lb solution to:
4 5 
find_max done, mu[4] = 2
i = 3, c.size = 2, p.size = 1
debug: running find_max with c.size = 2, p.size = 1
before erasing 4:
4 5 
after:
5 
debug: running find_max with c.size = 1, p.size = 2
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 3
Updating new lb solution to:
3 4 5 
find_max done, mu[3] = 3
i = 2, c.size = 3, p.size = 1
debug: running find_max with c.size = 3, p.size = 1
before erasing 3:
3 4 5 
after:
4 5 
debug: running find_max with c.size = 2, p.size = 2
before erasing 4:
4 5 
after:
5 
debug: running find_max with c.size = 1, p.size = 3
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 4
Updating new lb solution to:
2 3 4 5 
find_max done, mu[2] = 4
i = 1, c.size = 4, p.size = 1
debug: running find_max with c.size = 4, p.size = 1
before erasing 2:
2 3 4 5 
after:
3 4 5 
debug: running find_max with c.size = 3, p.size = 2
before erasing 3:
3 4 5 
after:
4 5 
debug: running find_max with c.size = 2, p.size = 3
before erasing 4:
4 5 
after:
5 
debug: running find_max with c.size = 1, p.size = 4
before erasing 5:
5 
after:

debug: running find_max with c.size = 0, p.size = 5
Updating new lb solution to:
1 2 3 4 5 
find_max done, mu[1] = 5
i = 0, c.size = 5, p.size = 1
debug: running find_max with c.size = 5, p.size = 1
before erasing 1:
1 2 3 4 5 
after:
2 3 4 5 
debug: running find_max with c.size = 0, p.size = 2
before erasing 2:
2 3 4 5 
after:
3 4 5 
debug: running find_max with c.size = 0, p.size = 2
find_max done, mu[0] = 5
RDS done
rds: time elapsed = 0.000033
-----------------------
RDS returned 5
